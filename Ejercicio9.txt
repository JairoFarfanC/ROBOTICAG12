Explain each line of the code:

1. What is a concept in C++. Which is it role in our code?
    El concept es una etiqueta que sirve como filtro y describe los requisitos que un tipo debe cumplir para ser usado en plantillas.
    En nuestro programa se usa para especificar que la unica entrada invocable sean aquellas de la class "Timer".

2. What is a templated method like connect?
   Un metodo templated permite que el compilador cree automaticamente una version adaptada del mismo segun el tipo de variable que le pases.

3. How is the lambda thread capturing variables? Which variables?
   Lambda lleva consigo las variables que necesita para funcionar dentro del hilo. Captura 'this' para acceder a las variables de la clase y 'f'
   para poder ejecutar la funcion que le pasamos. Así el hilo sabe qué objeto controlar y que funcion llamar.

4. Which restrictions has the f variable to be invoked?
   'f' tiene que ser algo que se pueda ejecutar como una función. Puede ser una función, una lambda o un objeto que se puede llamar. En este caso
   debe funcionar sin recibir datos y sin devolver nada. Asi el temporizador puede invocarla facilmente en cada tick. Si no cumple esas condiciones, el compilador da error.

5. What does the detach method do?
   'detach' separa el hilo del objeto std::thread que lo creo. Esto significa que el hilo sigue corriendo en segundo plano por su cuenta. Ya no puedes controlarlo ni esperar
   a que termine con 'join()'. Se usa cuando quieres que el hilo trabaje de forma independiente. Pero hay que tener cuidado porque puede quedar ejecutandose sin control.

6. What are the std::atomic_bool and std::atomic_int types. Why do they not need a mutex?std::invoke
   Son variables especiales que se pueden usar en varios hilos a la vez. Garantizan que leer o escribir su valor se hace de form segura sin errores de concurrencia. No necesitan
   un 'mutex' porque sus operaciones como 'store', 'load' etc ya son atomicas. Asi se evita que dos hilos vean datos corruptos al mismo tiempo.

